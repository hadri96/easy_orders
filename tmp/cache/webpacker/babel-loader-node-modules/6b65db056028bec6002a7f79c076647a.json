{"ast":null,"code":"var passwordValidator = require('password-validator'); // Create a schema\n\n\nvar schema = new passwordValidator(); // Add properties to it\n\nschema.is().min(8) // Minimum length 8\n.is().max(100) // Maximum length 100\n.has().uppercase() // Must have uppercase letters\n.has().lowercase() // Must have lowercase letters\n.has().digits(2) // Must have at least 2 digits\n.has().symbols(1); // Should not have spaces\n\nvar checkPassword = function checkPassword() {\n  document.addEventListener('change', function (_event) {\n    var password = document.getElementById('user_password').value;\n    var checks = schema.validate(password, {\n      list: true\n    });\n    checkUppercase(checks);\n    console.log(password);\n    console.log(checks);\n  });\n};\n\nvar checkUppercase = function checkUppercase(list) {\n  var lowerValidation = document.getElementById('lower-password');\n\n  if (list.includes('lowercase')) {\n    lowerValidation.innerHTML = \"❌ Contains lowercase\";\n  } else {\n    lowerValidation.innerHTML = \"✅ Contains lowercase\";\n  }\n};\n\nexport { checkPassword };","map":{"version":3,"sources":["/Users/hadrienmorand/code/hadri96/easy_orders/app/javascript/components/password-check.js"],"names":["passwordValidator","require","schema","is","min","max","has","uppercase","lowercase","digits","symbols","checkPassword","document","addEventListener","_event","password","getElementById","value","checks","validate","list","checkUppercase","console","log","lowerValidation","includes","innerHTML"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,oBAAD,CAA/B,C,CAEA;;;AACA,IAAIC,MAAM,GAAG,IAAIF,iBAAJ,EAAb,C,CAEA;;AACAE,MAAM,CACHC,EADH,GACQC,GADR,CACY,CADZ,EACkD;AADlD,CAEGD,EAFH,GAEQE,GAFR,CAEY,GAFZ,EAEkD;AAFlD,CAGGC,GAHH,GAGSC,SAHT,GAGkD;AAHlD,CAIGD,GAJH,GAISE,SAJT,GAIkD;AAJlD,CAKGF,GALH,GAKSG,MALT,CAKgB,CALhB,EAKkD;AALlD,CAMGH,GANH,GAMSI,OANT,CAMiB,CANjB,E,CAM8C;;AAE9C,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BC,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,UAACC,MAAD,EAAY;AAC9C,QAAMC,QAAQ,GAAGH,QAAQ,CAACI,cAAT,CAAwB,eAAxB,EAAyCC,KAA1D;AACA,QAAMC,MAAM,GAAGhB,MAAM,CAACiB,QAAP,CAAgBJ,QAAhB,EAA0B;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAA1B,CAAf;AACAC,IAAAA,cAAc,CAACH,MAAD,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACD,GAND;AAOD,CARD;;AAUA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACD,IAAD,EAAU;AAC/B,MAAMI,eAAe,GAAGZ,QAAQ,CAACI,cAAT,CAAwB,gBAAxB,CAAxB;;AACA,MAAII,IAAI,CAACK,QAAL,CAAc,WAAd,CAAJ,EAAgC;AAC9BD,IAAAA,eAAe,CAACE,SAAhB,GAA4B,sBAA5B;AACD,GAFD,MAEO;AACLF,IAAAA,eAAe,CAACE,SAAhB,GAA4B,sBAA5B;AACD;AACF,CAPD;;AASA,SAASf,aAAT","sourcesContent":["let passwordValidator = require('password-validator');\n\n// Create a schema\nlet schema = new passwordValidator();\n\n// Add properties to it\nschema\n  .is().min(8)                                    // Minimum length 8\n  .is().max(100)                                  // Maximum length 100\n  .has().uppercase()                              // Must have uppercase letters\n  .has().lowercase()                              // Must have lowercase letters\n  .has().digits(2)                                // Must have at least 2 digits\n  .has().symbols(1);                          // Should not have spaces\n\nconst checkPassword = () => {\n  document.addEventListener('change', (_event) => {\n    const password = document.getElementById('user_password').value;\n    const checks = schema.validate(password, { list: true });\n    checkUppercase(checks);\n    console.log(password);\n    console.log(checks);\n  });\n};\n\nconst checkUppercase = (list) => {\n  const lowerValidation = document.getElementById('lower-password');\n  if (list.includes('lowercase')) {\n    lowerValidation.innerHTML = \"❌ Contains lowercase\";\n  } else {\n    lowerValidation.innerHTML = \"✅ Contains lowercase\";\n  }\n}\n\nexport { checkPassword };\n"]},"metadata":{},"sourceType":"module"}